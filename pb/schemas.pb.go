// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: schemas.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PostState_Stage int32

const (
	PostState_S_WIP    PostState_Stage = 0
	PostState_S_REVIEW PostState_Stage = 1
	PostState_S_PUB    PostState_Stage = 2
	PostState_S_REV    PostState_Stage = 3
)

// Enum value maps for PostState_Stage.
var (
	PostState_Stage_name = map[int32]string{
		0: "S_WIP",
		1: "S_REVIEW",
		2: "S_PUB",
		3: "S_REV",
	}
	PostState_Stage_value = map[string]int32{
		"S_WIP":    0,
		"S_REVIEW": 1,
		"S_PUB":    2,
		"S_REV":    3,
	}
)

func (x PostState_Stage) Enum() *PostState_Stage {
	p := new(PostState_Stage)
	*p = x
	return p
}

func (x PostState_Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostState_Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[0].Descriptor()
}

func (PostState_Stage) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[0]
}

func (x PostState_Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostState_Stage.Descriptor instead.
func (PostState_Stage) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{1, 0}
}

type PostState_Status int32

const (
	PostState_S_DRAFT       PostState_Status = 0
	PostState_S_ARCHIVED    PostState_Status = 1
	PostState_S_TRASH       PostState_Status = 2
	PostState_S_VISIBLE_ON  PostState_Status = 3
	PostState_S_VISIBLE_OFF PostState_Status = 4
)

// Enum value maps for PostState_Status.
var (
	PostState_Status_name = map[int32]string{
		0: "S_DRAFT",
		1: "S_ARCHIVED",
		2: "S_TRASH",
		3: "S_VISIBLE_ON",
		4: "S_VISIBLE_OFF",
	}
	PostState_Status_value = map[string]int32{
		"S_DRAFT":       0,
		"S_ARCHIVED":    1,
		"S_TRASH":       2,
		"S_VISIBLE_ON":  3,
		"S_VISIBLE_OFF": 4,
	}
)

func (x PostState_Status) Enum() *PostState_Status {
	p := new(PostState_Status)
	*p = x
	return p
}

func (x PostState_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostState_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[1].Descriptor()
}

func (PostState_Status) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[1]
}

func (x PostState_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostState_Status.Descriptor instead.
func (PostState_Status) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{1, 1}
}

type Comment_TargetType int32

const (
	Comment_TT_USER    Comment_TargetType = 0
	Comment_TT_COMMENT Comment_TargetType = 1
	Comment_TT_POST    Comment_TargetType = 2
)

// Enum value maps for Comment_TargetType.
var (
	Comment_TargetType_name = map[int32]string{
		0: "TT_USER",
		1: "TT_COMMENT",
		2: "TT_POST",
	}
	Comment_TargetType_value = map[string]int32{
		"TT_USER":    0,
		"TT_COMMENT": 1,
		"TT_POST":    2,
	}
)

func (x Comment_TargetType) Enum() *Comment_TargetType {
	p := new(Comment_TargetType)
	*p = x
	return p
}

func (x Comment_TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Comment_TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[2].Descriptor()
}

func (Comment_TargetType) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[2]
}

func (x Comment_TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Comment_TargetType.Descriptor instead.
func (Comment_TargetType) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{2, 0}
}

type User_Type int32

const (
	User_T_NORMAL User_Type = 0
	User_T_AUTHOR User_Type = 1
)

// Enum value maps for User_Type.
var (
	User_Type_name = map[int32]string{
		0: "T_NORMAL",
		1: "T_AUTHOR",
	}
	User_Type_value = map[string]int32{
		"T_NORMAL": 0,
		"T_AUTHOR": 1,
	}
)

func (x User_Type) Enum() *User_Type {
	p := new(User_Type)
	*p = x
	return p
}

func (x User_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (User_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_schemas_proto_enumTypes[3].Descriptor()
}

func (User_Type) Type() protoreflect.EnumType {
	return &file_schemas_proto_enumTypes[3]
}

func (x User_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use User_Type.Descriptor instead.
func (User_Type) EnumDescriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{5, 0}
}

type Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid         string     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	HeadlineText string     `protobuf:"bytes,3,opt,name=headline_text,json=headlineText,proto3" json:"headline_text,omitempty"`
	SummaryText  string     `protobuf:"bytes,4,opt,name=summary_text,json=summaryText,proto3" json:"summary_text,omitempty"`
	User         *User      `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Comments     []*Comment `protobuf:"bytes,6,rep,name=comments,proto3" json:"comments,omitempty"`
	Tags         []string   `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Original     *Post      `protobuf:"bytes,8,opt,name=original,proto3,oneof" json:"original,omitempty"`
	State        *PostState `protobuf:"bytes,9,opt,name=state,proto3,oneof" json:"state,omitempty"`
}

func (x *Post) Reset() {
	*x = Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{0}
}

func (x *Post) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Post) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Post) GetHeadlineText() string {
	if x != nil {
		return x.HeadlineText
	}
	return ""
}

func (x *Post) GetSummaryText() string {
	if x != nil {
		return x.SummaryText
	}
	return ""
}

func (x *Post) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Post) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *Post) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Post) GetOriginal() *Post {
	if x != nil {
		return x.Original
	}
	return nil
}

func (x *Post) GetState() *PostState {
	if x != nil {
		return x.State
	}
	return nil
}

type PostState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stage       PostState_Stage        `protobuf:"varint,1,opt,name=stage,proto3,enum=blogs.PostState_Stage" json:"stage,omitempty"`
	Status      PostState_Status       `protobuf:"varint,2,opt,name=status,proto3,enum=blogs.PostState_Status" json:"status,omitempty"`
	RevisedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=revised_at,json=revisedAt,proto3,oneof" json:"revised_at,omitempty"`
	ArchivedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=archived_at,json=archivedAt,proto3,oneof" json:"archived_at,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=published_at,json=publishedAt,proto3,oneof" json:"published_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Reacts      *Reacts                `protobuf:"bytes,8,opt,name=reacts,proto3" json:"reacts,omitempty"`
}

func (x *PostState) Reset() {
	*x = PostState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostState) ProtoMessage() {}

func (x *PostState) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostState.ProtoReflect.Descriptor instead.
func (*PostState) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{1}
}

func (x *PostState) GetStage() PostState_Stage {
	if x != nil {
		return x.Stage
	}
	return PostState_S_WIP
}

func (x *PostState) GetStatus() PostState_Status {
	if x != nil {
		return x.Status
	}
	return PostState_S_DRAFT
}

func (x *PostState) GetRevisedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RevisedAt
	}
	return nil
}

func (x *PostState) GetArchivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ArchivedAt
	}
	return nil
}

func (x *PostState) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *PostState) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PostState) GetReacts() *Reacts {
	if x != nil {
		return x.Reacts
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid        string             `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	User        *User              `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	CommentText string             `protobuf:"bytes,4,opt,name=comment_text,json=commentText,proto3" json:"comment_text,omitempty"`
	State       *CommentState      `protobuf:"bytes,5,opt,name=state,proto3,oneof" json:"state,omitempty"`
	Replies     []*Comment         `protobuf:"bytes,6,rep,name=replies,proto3" json:"replies,omitempty"`
	TargetType  Comment_TargetType `protobuf:"varint,7,opt,name=target_type,json=targetType,proto3,enum=blogs.Comment_TargetType" json:"target_type,omitempty"`
	// Types that are assignable to Target:
	//
	//	*Comment_TComment
	//	*Comment_TPost
	//	*Comment_TUser
	Target isComment_Target `protobuf_oneof:"target"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{2}
}

func (x *Comment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Comment) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Comment) GetCommentText() string {
	if x != nil {
		return x.CommentText
	}
	return ""
}

func (x *Comment) GetState() *CommentState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Comment) GetReplies() []*Comment {
	if x != nil {
		return x.Replies
	}
	return nil
}

func (x *Comment) GetTargetType() Comment_TargetType {
	if x != nil {
		return x.TargetType
	}
	return Comment_TT_USER
}

func (m *Comment) GetTarget() isComment_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *Comment) GetTComment() *Comment {
	if x, ok := x.GetTarget().(*Comment_TComment); ok {
		return x.TComment
	}
	return nil
}

func (x *Comment) GetTPost() *Post {
	if x, ok := x.GetTarget().(*Comment_TPost); ok {
		return x.TPost
	}
	return nil
}

func (x *Comment) GetTUser() *User {
	if x, ok := x.GetTarget().(*Comment_TUser); ok {
		return x.TUser
	}
	return nil
}

type isComment_Target interface {
	isComment_Target()
}

type Comment_TComment struct {
	TComment *Comment `protobuf:"bytes,8,opt,name=t_comment,json=tComment,proto3,oneof"`
}

type Comment_TPost struct {
	TPost *Post `protobuf:"bytes,9,opt,name=t_post,json=tPost,proto3,oneof"`
}

type Comment_TUser struct {
	TUser *User `protobuf:"bytes,10,opt,name=t_user,json=tUser,proto3,oneof"`
}

func (*Comment_TComment) isComment_Target() {}

func (*Comment_TPost) isComment_Target() {}

func (*Comment_TUser) isComment_Target() {}

type CommentState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reacts    *Reacts                `protobuf:"bytes,1,opt,name=reacts,proto3" json:"reacts,omitempty"`
	Mentions  []*User                `protobuf:"bytes,2,rep,name=mentions,proto3" json:"mentions,omitempty"`
	Edited    bool                   `protobuf:"varint,3,opt,name=edited,proto3" json:"edited,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	EditedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=edited_at,json=editedAt,proto3,oneof" json:"edited_at,omitempty"`
}

func (x *CommentState) Reset() {
	*x = CommentState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentState) ProtoMessage() {}

func (x *CommentState) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentState.ProtoReflect.Descriptor instead.
func (*CommentState) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{3}
}

func (x *CommentState) GetReacts() *Reacts {
	if x != nil {
		return x.Reacts
	}
	return nil
}

func (x *CommentState) GetMentions() []*User {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *CommentState) GetEdited() bool {
	if x != nil {
		return x.Edited
	}
	return false
}

func (x *CommentState) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CommentState) GetEditedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EditedAt
	}
	return nil
}

type Reacts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LikeCount     uint64  `protobuf:"varint,1,opt,name=likeCount,proto3" json:"likeCount,omitempty"`
	ConfusedCount uint64  `protobuf:"varint,2,opt,name=confusedCount,proto3" json:"confusedCount,omitempty"`
	LoveCount     uint64  `protobuf:"varint,3,opt,name=loveCount,proto3" json:"loveCount,omitempty"`
	LaughCount    uint64  `protobuf:"varint,4,opt,name=laughCount,proto3" json:"laughCount,omitempty"`
	SadCount      uint64  `protobuf:"varint,5,opt,name=sadCount,proto3" json:"sadCount,omitempty"`
	CareCount     uint64  `protobuf:"varint,6,opt,name=careCount,proto3" json:"careCount,omitempty"`
	Users         []*User `protobuf:"bytes,7,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *Reacts) Reset() {
	*x = Reacts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reacts) ProtoMessage() {}

func (x *Reacts) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reacts.ProtoReflect.Descriptor instead.
func (*Reacts) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{4}
}

func (x *Reacts) GetLikeCount() uint64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Reacts) GetConfusedCount() uint64 {
	if x != nil {
		return x.ConfusedCount
	}
	return 0
}

func (x *Reacts) GetLoveCount() uint64 {
	if x != nil {
		return x.LoveCount
	}
	return 0
}

func (x *Reacts) GetLaughCount() uint64 {
	if x != nil {
		return x.LaughCount
	}
	return 0
}

func (x *Reacts) GetSadCount() uint64 {
	if x != nil {
		return x.SadCount
	}
	return 0
}

func (x *Reacts) GetCareCount() uint64 {
	if x != nil {
		return x.CareCount
	}
	return 0
}

func (x *Reacts) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid     string     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name     string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FullName string     `protobuf:"bytes,4,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Email    string     `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Type     User_Type  `protobuf:"varint,6,opt,name=type,proto3,enum=blogs.User_Type" json:"type,omitempty"`
	State    *UserState `protobuf:"bytes,7,opt,name=state,proto3,oneof" json:"state,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetType() User_Type {
	if x != nil {
		return x.Type
	}
	return User_T_NORMAL
}

func (x *User) GetState() *UserState {
	if x != nil {
		return x.State
	}
	return nil
}

type UserState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Disabled  bool                   `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	UVerified bool                   `protobuf:"varint,4,opt,name=u_verified,json=uVerified,proto3" json:"u_verified,omitempty"`
}

func (x *UserState) Reset() {
	*x = UserState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserState) ProtoMessage() {}

func (x *UserState) ProtoReflect() protoreflect.Message {
	mi := &file_schemas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserState.ProtoReflect.Descriptor instead.
func (*UserState) Descriptor() ([]byte, []int) {
	return file_schemas_proto_rawDescGZIP(), []int{6}
}

func (x *UserState) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserState) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserState) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *UserState) GetUVerified() bool {
	if x != nil {
		return x.UVerified
	}
	return false
}

var File_schemas_proto protoreflect.FileDescriptor

var file_schemas_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x02, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a,
	0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0xd3, 0x04, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62,
	0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c,
	0x6f, 0x67, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0a,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09,
	0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0b,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52,
	0x0a, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42,
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x02, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x63, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x73, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x73, 0x22, 0x36, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x5f, 0x57, 0x49, 0x50, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x5f, 0x52, 0x45,
	0x56, 0x49, 0x45, 0x57, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x5f, 0x50, 0x55, 0x42, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x5f, 0x52, 0x45, 0x56, 0x10, 0x03, 0x22, 0x57, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x5f, 0x44, 0x52, 0x41, 0x46,
	0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x5f, 0x54, 0x52, 0x41, 0x53, 0x48, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x4f, 0x4e,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x5f, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f,
	0x4f, 0x46, 0x46, 0x10, 0x04, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0xce, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f,
	0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2d, 0x0a, 0x09, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x06, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x0a, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x54, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x54,
	0x10, 0x02, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x73, 0x52, 0x06, 0x72, 0x65, 0x61, 0x63, 0x74, 0x73, 0x12, 0x27,
	0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x6d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x08, 0x65, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0xe7, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x75, 0x73, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x75, 0x67, 0x68, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61, 0x75, 0x67, 0x68, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x62,
	0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x22, 0xf2, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6c, 0x6f, 0x67,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x22, 0x22, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x54, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x75, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x1d, 0x48, 0x01, 0x5a, 0x19, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6d, 0x76, 0x37, 0x2f, 0x62,
	0x6c, 0x6f, 0x67, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schemas_proto_rawDescOnce sync.Once
	file_schemas_proto_rawDescData = file_schemas_proto_rawDesc
)

func file_schemas_proto_rawDescGZIP() []byte {
	file_schemas_proto_rawDescOnce.Do(func() {
		file_schemas_proto_rawDescData = protoimpl.X.CompressGZIP(file_schemas_proto_rawDescData)
	})
	return file_schemas_proto_rawDescData
}

var file_schemas_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_schemas_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_schemas_proto_goTypes = []interface{}{
	(PostState_Stage)(0),          // 0: blogs.PostState.Stage
	(PostState_Status)(0),         // 1: blogs.PostState.Status
	(Comment_TargetType)(0),       // 2: blogs.Comment.TargetType
	(User_Type)(0),                // 3: blogs.User.Type
	(*Post)(nil),                  // 4: blogs.Post
	(*PostState)(nil),             // 5: blogs.PostState
	(*Comment)(nil),               // 6: blogs.Comment
	(*CommentState)(nil),          // 7: blogs.CommentState
	(*Reacts)(nil),                // 8: blogs.Reacts
	(*User)(nil),                  // 9: blogs.User
	(*UserState)(nil),             // 10: blogs.UserState
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_schemas_proto_depIdxs = []int32{
	9,  // 0: blogs.Post.user:type_name -> blogs.User
	6,  // 1: blogs.Post.comments:type_name -> blogs.Comment
	4,  // 2: blogs.Post.original:type_name -> blogs.Post
	5,  // 3: blogs.Post.state:type_name -> blogs.PostState
	0,  // 4: blogs.PostState.stage:type_name -> blogs.PostState.Stage
	1,  // 5: blogs.PostState.status:type_name -> blogs.PostState.Status
	11, // 6: blogs.PostState.revised_at:type_name -> google.protobuf.Timestamp
	11, // 7: blogs.PostState.archived_at:type_name -> google.protobuf.Timestamp
	11, // 8: blogs.PostState.published_at:type_name -> google.protobuf.Timestamp
	11, // 9: blogs.PostState.created_at:type_name -> google.protobuf.Timestamp
	8,  // 10: blogs.PostState.reacts:type_name -> blogs.Reacts
	9,  // 11: blogs.Comment.user:type_name -> blogs.User
	7,  // 12: blogs.Comment.state:type_name -> blogs.CommentState
	6,  // 13: blogs.Comment.replies:type_name -> blogs.Comment
	2,  // 14: blogs.Comment.target_type:type_name -> blogs.Comment.TargetType
	6,  // 15: blogs.Comment.t_comment:type_name -> blogs.Comment
	4,  // 16: blogs.Comment.t_post:type_name -> blogs.Post
	9,  // 17: blogs.Comment.t_user:type_name -> blogs.User
	8,  // 18: blogs.CommentState.reacts:type_name -> blogs.Reacts
	9,  // 19: blogs.CommentState.mentions:type_name -> blogs.User
	11, // 20: blogs.CommentState.created_at:type_name -> google.protobuf.Timestamp
	11, // 21: blogs.CommentState.edited_at:type_name -> google.protobuf.Timestamp
	9,  // 22: blogs.Reacts.users:type_name -> blogs.User
	3,  // 23: blogs.User.type:type_name -> blogs.User.Type
	10, // 24: blogs.User.state:type_name -> blogs.UserState
	11, // 25: blogs.UserState.created_at:type_name -> google.protobuf.Timestamp
	11, // 26: blogs.UserState.updated_at:type_name -> google.protobuf.Timestamp
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_schemas_proto_init() }
func file_schemas_proto_init() {
	if File_schemas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schemas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reacts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_schemas_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_schemas_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_schemas_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Comment_TComment)(nil),
		(*Comment_TPost)(nil),
		(*Comment_TUser)(nil),
	}
	file_schemas_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_schemas_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_schemas_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schemas_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_schemas_proto_goTypes,
		DependencyIndexes: file_schemas_proto_depIdxs,
		EnumInfos:         file_schemas_proto_enumTypes,
		MessageInfos:      file_schemas_proto_msgTypes,
	}.Build()
	File_schemas_proto = out.File
	file_schemas_proto_rawDesc = nil
	file_schemas_proto_goTypes = nil
	file_schemas_proto_depIdxs = nil
}
